= render partial: 'layouts/navbar', locals: {query: @query}

.container-lg.py-4
  - bookmarks.each_with_index do |b, i|
    .bookmark.d-flex.flex-column.pb-4.align-items-start
      - title = b.title || '[unknown]'
      = link_to b.link, target: '_blank', class: 'd-flex flex-wrap flex-row align-items-center flex-shrink-1 text-decoration-none fw-light text-dark' do
        .fs-3
          span.fs-5 = (@start_index + i).to_s + ". "
          span.fs-3 = title
      = link_to b.link, target: '_blank', class: 'd-flex flex-wrap flex-row align-items-center flex-shrink-1 text-decoration-none fw-light text-muted' do
        - host = URI.parse(b.link).host || b.link
        - before = b.link[0, b.link.index(host)]
        - after = b.link[b.link.index(host) + host.length, b.link.length-1]

        - if before.present?
          span.fw-lighter.fs-6.text-muted = before
        span.fw-normal.fs-6.text-dark = host
        - if after.present?
          span.fw-lighter.fs-6.text-muted = after
      .flex-row.spacing
        span.fw-light.fs-7.badge.text-muted.bg-light
          | Added
          =<> time_ago_in_words(b.created_at)
          | ago, under
        - if b.category.present?
          = link_to category_path(b.category) do
            span.badge.bg-secondary.fs-7.text-info = b.category.name
        - else
          span.badge.bg-secondary.fs-7.text-info Uncategorised
        = link_to 'edit', '#', class: 'ms-2 text-decoration-none text-info', remote: true
  nav aria-label="Page navigation"
  ul.pagination.justify-content-center
    - if page != 1
      li.page-item
        = link_to 'First', page_link.call(p: 1), class: 'page-link link-success'
    - if page > 2
      li.page-item
        = link_to page-2, page_link.call(p: page-2), class: 'page-link link-success'
    - if page > 1
      li.page-item
        = link_to page-1, page_link.call(p: page-1), class: 'page-link link-success'
    li.page-item.disabled
      .page-link = page
    - if last_page > page
      li.page-item
        = link_to page+1, page_link.call(p: page+1), class: 'page-link link-success'
    - if last_page > (page+1)
      li.page-item
        = link_to page+2, page_link.call(p: page+2), class: 'page-link link-success'
    - if last_page != page
      li.page-item
        = link_to 'Last', page_link.call(p: last_page), class: 'page-link link-success'

= render partial: 'bookmarks/add_modal'
